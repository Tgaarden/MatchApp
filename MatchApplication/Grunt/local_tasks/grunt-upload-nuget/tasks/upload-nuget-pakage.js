module.exports = function(grunt) {
    'use strict';

    /**
     * Task for uploading a nuget package to the oxx nuget server.
     *
     * Available options for the task, with default values:
     *
     * nugetPackageDir         : 'build/'                   - temp folder where the nuget package recides.
     * promptText              : 'Should the build system upload the created package to the nuGet server?'
     * fileNameProperty        : 'nuGetFileName'            - The property used in the grunt config for saving the nuget file name.
     * nugetServer             : 'Http://oxxNugetServer'    - The nuget server url
     * nugetApiKey             : ''                         - Guid API key generated by the nuget server.
     */

    grunt.registerTask("upload_nuget", "Create a nuget package", function () {
        var done = this.async(),
            options = this.options({
                doUpload                : true,
                nugetPackageDir         : 'build/',
                promptText              : 'Should the build system upload the created package to the nuGet server?',
                fileNameProperty        : '',
                nugetServer             : '',
                nugetApiKey             : ''
            }),
            source = grunt.config.get(options.fileNameProperty);

        options.nugetPackageDir += options.nugetPackageDir.search(/\/$/) === -1 ? "/" : "";

        if(options.doUpload && typeof source === "string" && source.length > 0){
            grunt.util.spawn({
                cmd: "nuget.exe",
                args: [
                    "push",
                    options.nugetPackageDir + source,
                    "-s",
                    options.nugetServer,
                    options.nugetApiKey
                ]
            }, function (error, result) {
                if (error) {
                    grunt.log.error(error);
                } else {
                    grunt.log.write(result);
                }

                done();
            });
        }
        else{
            done();
        }
    });
};